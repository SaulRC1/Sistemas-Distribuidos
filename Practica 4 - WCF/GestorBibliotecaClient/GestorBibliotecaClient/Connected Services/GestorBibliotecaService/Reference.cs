//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestorBibliotecaClient.GestorBibliotecaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TDatosRepositorio", Namespace="http://schemas.datacontract.org/2004/07/GestorBibliotecaService")]
    [System.SerializableAttribute()]
    public partial class TDatosRepositorio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfBooks {
            get {
                return this.NumberOfBooksField;
            }
            set {
                if ((this.NumberOfBooksField.Equals(value) != true)) {
                    this.NumberOfBooksField = value;
                    this.RaisePropertyChanged("NumberOfBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepositoryAddress {
            get {
                return this.RepositoryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryAddressField, value) != true)) {
                    this.RepositoryAddressField = value;
                    this.RaisePropertyChanged("RepositoryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepositoryName {
            get {
                return this.RepositoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryNameField, value) != true)) {
                    this.RepositoryNameField = value;
                    this.RaisePropertyChanged("RepositoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TLibro", Namespace="http://schemas.datacontract.org/2004/07/GestorBibliotecaService")]
    [System.SerializableAttribute()]
    public partial class TLibro : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisponiblesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdiomaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrestadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservadosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TituloField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Anio {
            get {
                return this.AnioField;
            }
            set {
                if ((this.AnioField.Equals(value) != true)) {
                    this.AnioField = value;
                    this.RaisePropertyChanged("Anio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autor {
            get {
                return this.AutorField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorField, value) != true)) {
                    this.AutorField = value;
                    this.RaisePropertyChanged("Autor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Disponibles {
            get {
                return this.DisponiblesField;
            }
            set {
                if ((this.DisponiblesField.Equals(value) != true)) {
                    this.DisponiblesField = value;
                    this.RaisePropertyChanged("Disponibles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idioma {
            get {
                return this.IdiomaField;
            }
            set {
                if ((object.ReferenceEquals(this.IdiomaField, value) != true)) {
                    this.IdiomaField = value;
                    this.RaisePropertyChanged("Idioma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Isbn {
            get {
                return this.IsbnField;
            }
            set {
                if ((object.ReferenceEquals(this.IsbnField, value) != true)) {
                    this.IsbnField = value;
                    this.RaisePropertyChanged("Isbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pais {
            get {
                return this.PaisField;
            }
            set {
                if ((object.ReferenceEquals(this.PaisField, value) != true)) {
                    this.PaisField = value;
                    this.RaisePropertyChanged("Pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Prestados {
            get {
                return this.PrestadosField;
            }
            set {
                if ((this.PrestadosField.Equals(value) != true)) {
                    this.PrestadosField = value;
                    this.RaisePropertyChanged("Prestados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reservados {
            get {
                return this.ReservadosField;
            }
            set {
                if ((this.ReservadosField.Equals(value) != true)) {
                    this.ReservadosField = value;
                    this.RaisePropertyChanged("Reservados");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titulo {
            get {
                return this.TituloField;
            }
            set {
                if ((object.ReferenceEquals(this.TituloField, value) != true)) {
                    this.TituloField = value;
                    this.RaisePropertyChanged("Titulo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GestorBibliotecaService.IGestorBiblioteca")]
    public interface IGestorBiblioteca {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Conexion", ReplyAction="http://tempuri.org/IGestorBiblioteca/ConexionResponse")]
        int Conexion(string pPasswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Conexion", ReplyAction="http://tempuri.org/IGestorBiblioteca/ConexionResponse")]
        System.Threading.Tasks.Task<int> ConexionAsync(string pPasswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Desconexion", ReplyAction="http://tempuri.org/IGestorBiblioteca/DesconexionResponse")]
        bool Desconexion(int pIda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Desconexion", ReplyAction="http://tempuri.org/IGestorBiblioteca/DesconexionResponse")]
        System.Threading.Tasks.Task<bool> DesconexionAsync(int pIda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NRepositorios", ReplyAction="http://tempuri.org/IGestorBiblioteca/NRepositoriosResponse")]
        int NRepositorios(int pIda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NRepositorios", ReplyAction="http://tempuri.org/IGestorBiblioteca/NRepositoriosResponse")]
        System.Threading.Tasks.Task<int> NRepositoriosAsync(int pIda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/DatosRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/DatosRepositorioResponse")]
        TDatosRepositorio DatosRepositorio(int pIda, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/DatosRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/DatosRepositorioResponse")]
        System.Threading.Tasks.Task<TDatosRepositorio> DatosRepositorioAsync(int pIda, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/AbrirRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/AbrirRepositorioResponse")]
        int AbrirRepositorio(int pIda, string pNomFichero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/AbrirRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/AbrirRepositorioResponse")]
        System.Threading.Tasks.Task<int> AbrirRepositorioAsync(int pIda, string pNomFichero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/GuardarRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/GuardarRepositorioResponse")]
        int GuardarRepositorio(int pIda, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/GuardarRepositorio", ReplyAction="http://tempuri.org/IGestorBiblioteca/GuardarRepositorioResponse")]
        System.Threading.Tasks.Task<int> GuardarRepositorioAsync(int pIda, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NuevoLibro", ReplyAction="http://tempuri.org/IGestorBiblioteca/NuevoLibroResponse")]
        int NuevoLibro(int pIda, TLibro L, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NuevoLibro", ReplyAction="http://tempuri.org/IGestorBiblioteca/NuevoLibroResponse")]
        System.Threading.Tasks.Task<int> NuevoLibroAsync(int pIda, TLibro L, int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Comprar", ReplyAction="http://tempuri.org/IGestorBiblioteca/ComprarResponse")]
        int Comprar(int pIda, string pIsbn, int pNoLibros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Comprar", ReplyAction="http://tempuri.org/IGestorBiblioteca/ComprarResponse")]
        System.Threading.Tasks.Task<int> ComprarAsync(int pIda, string pIsbn, int pNoLibros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Retirar", ReplyAction="http://tempuri.org/IGestorBiblioteca/RetirarResponse")]
        int Retirar(int pIda, string pIsbn, int pNoLibros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Retirar", ReplyAction="http://tempuri.org/IGestorBiblioteca/RetirarResponse")]
        System.Threading.Tasks.Task<int> RetirarAsync(int pIda, string pIsbn, int pNoLibros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Ordenar", ReplyAction="http://tempuri.org/IGestorBiblioteca/OrdenarResponse")]
        bool Ordenar(int pIda, int pCampo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Ordenar", ReplyAction="http://tempuri.org/IGestorBiblioteca/OrdenarResponse")]
        System.Threading.Tasks.Task<bool> OrdenarAsync(int pIda, int pCampo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NLibros", ReplyAction="http://tempuri.org/IGestorBiblioteca/NLibrosResponse")]
        int NLibros(int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/NLibros", ReplyAction="http://tempuri.org/IGestorBiblioteca/NLibrosResponse")]
        System.Threading.Tasks.Task<int> NLibrosAsync(int pRepo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Buscar", ReplyAction="http://tempuri.org/IGestorBiblioteca/BuscarResponse")]
        int Buscar(int pIda, string pIsbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Buscar", ReplyAction="http://tempuri.org/IGestorBiblioteca/BuscarResponse")]
        System.Threading.Tasks.Task<int> BuscarAsync(int pIda, string pIsbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Descargar", ReplyAction="http://tempuri.org/IGestorBiblioteca/DescargarResponse")]
        TLibro Descargar(int pIda, int pRepo, int pPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Descargar", ReplyAction="http://tempuri.org/IGestorBiblioteca/DescargarResponse")]
        System.Threading.Tasks.Task<TLibro> DescargarAsync(int pIda, int pRepo, int pPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Prestar", ReplyAction="http://tempuri.org/IGestorBiblioteca/PrestarResponse")]
        int Prestar(int pPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Prestar", ReplyAction="http://tempuri.org/IGestorBiblioteca/PrestarResponse")]
        System.Threading.Tasks.Task<int> PrestarAsync(int pPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Devolver", ReplyAction="http://tempuri.org/IGestorBiblioteca/DevolverResponse")]
        int Devolver(int pPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorBiblioteca/Devolver", ReplyAction="http://tempuri.org/IGestorBiblioteca/DevolverResponse")]
        System.Threading.Tasks.Task<int> DevolverAsync(int pPos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorBibliotecaChannel : IGestorBiblioteca, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorBibliotecaClient : System.ServiceModel.ClientBase<IGestorBiblioteca>, IGestorBiblioteca {
        
        public GestorBibliotecaClient() {
        }
        
        public GestorBibliotecaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestorBibliotecaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorBibliotecaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorBibliotecaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Conexion(string pPasswd) {
            return base.Channel.Conexion(pPasswd);
        }
        
        public System.Threading.Tasks.Task<int> ConexionAsync(string pPasswd) {
            return base.Channel.ConexionAsync(pPasswd);
        }
        
        public bool Desconexion(int pIda) {
            return base.Channel.Desconexion(pIda);
        }
        
        public System.Threading.Tasks.Task<bool> DesconexionAsync(int pIda) {
            return base.Channel.DesconexionAsync(pIda);
        }
        
        public int NRepositorios(int pIda) {
            return base.Channel.NRepositorios(pIda);
        }
        
        public System.Threading.Tasks.Task<int> NRepositoriosAsync(int pIda) {
            return base.Channel.NRepositoriosAsync(pIda);
        }
        
        public TDatosRepositorio DatosRepositorio(int pIda, int pRepo) {
            return base.Channel.DatosRepositorio(pIda, pRepo);
        }
        
        public System.Threading.Tasks.Task<TDatosRepositorio> DatosRepositorioAsync(int pIda, int pRepo) {
            return base.Channel.DatosRepositorioAsync(pIda, pRepo);
        }
        
        public int AbrirRepositorio(int pIda, string pNomFichero) {
            return base.Channel.AbrirRepositorio(pIda, pNomFichero);
        }
        
        public System.Threading.Tasks.Task<int> AbrirRepositorioAsync(int pIda, string pNomFichero) {
            return base.Channel.AbrirRepositorioAsync(pIda, pNomFichero);
        }
        
        public int GuardarRepositorio(int pIda, int pRepo) {
            return base.Channel.GuardarRepositorio(pIda, pRepo);
        }
        
        public System.Threading.Tasks.Task<int> GuardarRepositorioAsync(int pIda, int pRepo) {
            return base.Channel.GuardarRepositorioAsync(pIda, pRepo);
        }
        
        public int NuevoLibro(int pIda, TLibro L, int pRepo) {
            return base.Channel.NuevoLibro(pIda, L, pRepo);
        }
        
        public System.Threading.Tasks.Task<int> NuevoLibroAsync(int pIda, TLibro L, int pRepo) {
            return base.Channel.NuevoLibroAsync(pIda, L, pRepo);
        }
        
        public int Comprar(int pIda, string pIsbn, int pNoLibros) {
            return base.Channel.Comprar(pIda, pIsbn, pNoLibros);
        }
        
        public System.Threading.Tasks.Task<int> ComprarAsync(int pIda, string pIsbn, int pNoLibros) {
            return base.Channel.ComprarAsync(pIda, pIsbn, pNoLibros);
        }
        
        public int Retirar(int pIda, string pIsbn, int pNoLibros) {
            return base.Channel.Retirar(pIda, pIsbn, pNoLibros);
        }
        
        public System.Threading.Tasks.Task<int> RetirarAsync(int pIda, string pIsbn, int pNoLibros) {
            return base.Channel.RetirarAsync(pIda, pIsbn, pNoLibros);
        }
        
        public bool Ordenar(int pIda, int pCampo) {
            return base.Channel.Ordenar(pIda, pCampo);
        }
        
        public System.Threading.Tasks.Task<bool> OrdenarAsync(int pIda, int pCampo) {
            return base.Channel.OrdenarAsync(pIda, pCampo);
        }
        
        public int NLibros(int pRepo) {
            return base.Channel.NLibros(pRepo);
        }
        
        public System.Threading.Tasks.Task<int> NLibrosAsync(int pRepo) {
            return base.Channel.NLibrosAsync(pRepo);
        }
        
        public int Buscar(int pIda, string pIsbn) {
            return base.Channel.Buscar(pIda, pIsbn);
        }
        
        public System.Threading.Tasks.Task<int> BuscarAsync(int pIda, string pIsbn) {
            return base.Channel.BuscarAsync(pIda, pIsbn);
        }
        
        public TLibro Descargar(int pIda, int pRepo, int pPos) {
            return base.Channel.Descargar(pIda, pRepo, pPos);
        }
        
        public System.Threading.Tasks.Task<TLibro> DescargarAsync(int pIda, int pRepo, int pPos) {
            return base.Channel.DescargarAsync(pIda, pRepo, pPos);
        }
        
        public int Prestar(int pPos) {
            return base.Channel.Prestar(pPos);
        }
        
        public System.Threading.Tasks.Task<int> PrestarAsync(int pPos) {
            return base.Channel.PrestarAsync(pPos);
        }
        
        public int Devolver(int pPos) {
            return base.Channel.Devolver(pPos);
        }
        
        public System.Threading.Tasks.Task<int> DevolverAsync(int pPos) {
            return base.Channel.DevolverAsync(pPos);
        }
    }
}
